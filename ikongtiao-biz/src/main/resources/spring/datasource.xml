<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd ">
	<!--<bean id="dataSourceConfig" abstract="true">-->
		<!--<property name="driverClass" value="com.mysql.jdbc.Driver" />-->
		<!--<property name="preferredTestQuery" value="select 1" />-->
		<!--&lt;!&ndash;初始化时获取3个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 &ndash;&gt;-->
		<!--<property name="initialPoolSize" value="${jdbc.initialPoolSize}" />-->
		<!--&lt;!&ndash;连接池中保留的最小连接数。Default: ? &ndash;&gt;-->
		<!--<property name="minPoolSize" value="${jdbc.minPoolSize}" />-->
		<!--&lt;!&ndash;连接池中保留的最大连接数。Default: 15 &ndash;&gt;-->
		<!--<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />-->
		<!--&lt;!&ndash;最大空闲时间,在x秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 &ndash;&gt;-->
		<!--<property name="maxIdleTime" value="${jdbc.maxIdleTime}" />-->
		<!--&lt;!&ndash;每60秒检查所有连接池中的空闲连接。Default: 0 &ndash;&gt;-->
		<!--<property name="idleConnectionTestPeriod" value="60" />-->
		<!--&lt;!&ndash;当连接池用完时再调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException，如设为0则无限期等待。-->
			<!--单位毫秒。Default: 0 &ndash;&gt;-->
		<!--<property name="checkoutTimeout" value="2000" />-->
	<!--</bean>-->
	<!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"-->
		  <!--parent="dataSourceConfig" destroy-method="close">-->
		<!--<property name="jdbcUrl" value="${jdbc.wetrack.url}" />-->
		<!--<property name="user" value="${jdbc.wetrack.user}" />-->
		<!--<property name="password" value="${jdbc.wetrack.password}" />-->
	<!--</bean>-->
	<!--<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >-->
		<!--<property name="dataSource">-->
			<!--<ref bean="dataSource" />-->
		<!--</property>-->
		<!--&lt;!&ndash; MyBatis 的 XML 配置文件路径 &ndash;&gt;-->
		<!--<property name="configLocation" value="classpath:mybatis/sqlMapConfig.xml" />-->
		<!--&lt;!&ndash; 扫描自动生成的xml文件 &ndash;&gt;&lt;!&ndash; Mybatis XML映射文件 &ndash;&gt;-->
		<!--<property name="mapperLocations"  >-->
			<!--<list>&lt;!&ndash; Mybatis XML映射文件 &ndash;&gt;-->
				<!--<value>classpath*:mybatis/ikongtiao/*.xml</value>-->
				<!--<value>classpath*:mybatis/ikongtiao-mix/*.xml</value>-->
				<!--&lt;!&ndash; 扫描自己写的xml文件&ndash;&gt;-->
			<!--</list>-->
		<!--</property>-->
	<!--</bean>-->
	<!--&lt;!&ndash; 声明式注解事务配置：容器中默认的事件管理器 &ndash;&gt;-->
	<!--<tx:annotation-driven transaction-manager="transactionManager" />-->
	<!--<bean id="commonDao" class="com.wetrack.base.dao.factory.CommonDaoFactoryBean">-->
		<!--<property name="sqlSessionFactory"><ref bean="sessionFactory"/></property>-->
	<!--</bean>-->
	<!--&lt;!&ndash; 事务管理 &ndash;&gt;-->
	<!--<bean id="transactionManager"-->
		  <!--class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
		<!--<property name="dataSource" ref="dataSource"></property>-->
	<!--</bean>-->
	<!--&lt;!&ndash; 事务模板 &ndash;&gt;-->
	<!--<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">-->
		<!--<property name="transactionManager" ref="transactionManager" />-->
	<!--</bean>-->


	<!--jpa springframework-->

</beans>