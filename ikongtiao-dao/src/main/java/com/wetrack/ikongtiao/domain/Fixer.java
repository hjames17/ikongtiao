/*
 * Copyright (C), 2014-2015, xiazhou
 * FileName: Fixer.java
 * Author: xiazhou
 * Date: 2015年12月15日 下午 00:50:23
 * Description:
 */
package com.wetrack.ikongtiao.domain;

import com.wetrack.ikongtiao.domain.fixer.FixerType;
import lombok.Data;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;

@Data
public class Fixer implements Serializable {


    public static final String FIXER_SEQUENCE = "fixer";

    /**
     * id:
     */
    private Integer id;

    private String password; //md5 hashed

    /**
     * name:维修员名称
     */
    private String name;

    /**
     * 该维修员是否集控系统的维保人员
     */
    Boolean jkMaintainer;

    FixerType type;

    /**
     * avatar:维修员头像
     */
    private String avatar;

    /**
     * phone:电话
     */
    private String phone;

    /**
     * province_id:
     */
    private Integer provinceId;

    /**
     * city_id:
     */
    private Integer cityId;

    /**
     * district_id:区
     */
    private Integer districtId;

    /**
     * address:详细地址
     */
    private String address;

    /**
     * latitude:纬度
     */
    private BigDecimal latitude;

    /**
     * longitude:经度
     */
    private BigDecimal longitude;

    /**
     * dw_create_time:
     */
    private Date dwCreateTime;

    /**
     * dw_update_time:
     */
    @Deprecated
    private Date dwUpdateTime;

    /**
     * operate_id:最近的操作人id
     */
    @Deprecated
    private Integer operateId;


    Boolean inService;


    /**
     * 实名认证信息，关联FixerCertInfo表，每一个提交的信息及其操作动作都关联一个FixerCertInfo记录
     * 驳回后的修改重新提交也会生成一条新记录
     */
    //实名认证状态： 0 未认证 1 待审核 2 已认证 －1 被驳回
    Integer certificateState;
    /**
     * 不存表
     */
    Integer certInfoId; //最新的FixerCertInfo记录id

    /**
     * 人身保险投保信息，关联FixerInsuranceInfo表，为每一个提交的信息机器操作动作都关联一个FixerInsuranceInfo记录
     * 驳回后的修改重新提交也会生成一条新记录
     * 另外保险属于易过期业务，需要年审
     */
    //人身意外险投保认证状态 : 0 未投保 1 待审核 2 已投保 －1 被驳回 －2 已过期
    Integer insuranceState;
    /**
     * 不存表
     */
    Integer insuranceInfoId; //最新的FixerInsuranceInfo记录id

    /**
     * 焊工证和电工证信息关联FixerProfessionInfo表，同实名认证同样的记录每个操作和信息
     */
    //焊工证认证状态 : 0 未认证 1 待审核 2 已认证 －1 被驳回
    Integer welderState;
    /**
     * 不存表
     */
    Integer welderInfoId; //最新的FixerProfessionInfo记录
    //电工证认证状态 : 0 未认证 1 待审核 2 已认证 －1 被驳回
    Integer electricianState;
    /**
     * 不存表
     */
    Integer electricianInfoId; //最新的FixerProfessionInfo记录

    boolean deleted; //逻辑删除


    /**
     * 负责的任务和维修单数量, 查表计算后映射字段
     */
    Integer missions;
    Integer orders;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fixer
     *
     * @xiazhougenerated Tue Dec 15 12:50:23 CST 2015
     */
    private static final long serialVersionUID = 1L;

    /**
     * This method corresponds to the database table fixer
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", name=").append(name);
        sb.append(", avatar=").append(avatar);
        sb.append(", phone=").append(phone);
        sb.append(", provinceId=").append(provinceId);
        sb.append(", cityId=").append(cityId);
        sb.append(", districtId=").append(districtId);
        sb.append(", address=").append(address);
        sb.append(", latitude=").append(latitude);
        sb.append(", longitude=").append(longitude);
        sb.append(", dwCreateTime=").append(dwCreateTime);
        sb.append(", dwUpdateTime=").append(dwUpdateTime);
        sb.append(", operateId=").append(operateId);
        sb.append(", serialVersionUID=").append(serialVersionUID);
        sb.append("]");
        return sb.toString();
    }
}