/*
 * Copyright (C), 2014-2015, xiazhou
 * FileName: UserInfo.java
 * Author: xiazhou
 * Date: 2015年12月15日 下午 00:50:23
 * Description:
 */
package com.wetrack.ikongtiao.domain.customer;

import lombok.Data;
import org.springframework.util.StringUtils;

import javax.persistence.*;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;

@Data
@Entity(name = "organization")
public class Organization implements Serializable {
    /**
     * id:
     */

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * 父组织id
     */
    @Column(name = "parent_id")
    private Long parentId;

    /**
     * avatar:头像
     */
    private String avatar;

    /**
     * 机构类型(可以是多种类型)
     */
    @Transient
    private List<OrgType> types;

    //以上字段通过这个字段持久化，类型之间以','连接
    @Column(name="org_types", length = 50)
    private String orgTypes;
    /**
     * organization:机构名称
     */
    @Column(length = 50)
    private String name;

    /**
     * account_email:账户邮箱
     */
    @Column(length = 50)
    private String email;

    /**
     * 法定代表人
     */
    @Column(name = "legal_person", length = 10)
    String legalPerson;

    /**
     * auth_state:认证状态,0：待认证，1：认证中，2：认证成功；3:认证失败
     */
    @Column(name = "auth_state")
    private Integer authState;

    /**
     * auth_img:认证图片地址
     */
    @Column(name = "auth_img")
    private String authImg;

    /**
     * license_no:证件号码
     */
    @Column(name = "license_no", length = 50)
    private String licenseNo;

    /**
     * create_time:
     */
    @Column(name = "create_time")
    private Date createTime;

    /**
     * update_time:
     */
    @Column(name = "update_time")
    private Date updateTime;

    /**
     * province_id:
     */
    @Column(name = "province_id")
    private Integer provinceId;

    /**
     * city_id:
     */
    @Column(name = "city_id")
    private Integer cityId;

    /**
     * district_id:区
     */
    @Column(name = "district_id")
    private Integer districtId;

    /**
     * address:详细地址
     */
    @Column(length = 100)
    private String address;

    /**
     * latitude:纬度
     */
    private BigDecimal latitude;

    /**
     * longitude:经度
     */
    private BigDecimal longitude;


    @Column(name = "admin_id", length = 32)
    private String adminId;

    /**
     * 默认的服务维修人员
     */
    @Column(name = "fixer_id")
    private Long fixerId;

    //联系人信息,需要推送信息的时候，作为接受推送的默认联系人
    @Column(name = "contacter_name", length = 10)
    String contacterName;
    @Column(name = "contacter_phone", length = 16)
    String contacterPhone;
    @Column(name = "contacter_email", length = 50)
    String contacterEmail;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_info
     *
     * @xiazhougenerated Tue Dec 15 12:50:23 CST 2015
     */
    private static final long serialVersionUID = 1L;

    public void deserializeOrgTypes(){
        //从数据库字段中解析出org types

        if(!StringUtils.isEmpty(orgTypes)){
            String[] parts = orgTypes.split(",");
            types = new ArrayList<>();
            for (String part : parts) {
                try{
                    types.add(OrgType.valueOf(part));
                }catch (Exception e){
                    //skip
                }
            }
        }
    }

    public void serializeOrgTypes(){
        //把org types持久化

        if(types != null && types.size() > 0){
            StringBuilder sb = new StringBuilder();
            for (OrgType type : types) {
                sb.append(type.toString()).append(",");
            }
            orgTypes = sb.substring(0, sb.length() - 1);
        }
    }

    public static void main(String[] args){
        Organization org = new Organization();
//        org.setOrgTypes(OrgType.OWNER + "");
//        org.deserializeOrgTypes();
        org.setTypes(Arrays.asList(OrgType.OWNER, OrgType.FACTORY));
        System.out.println("list is ");
        org.serializeOrgTypes();
        System.out.println("string is " + org.getOrgTypes());

    }


}