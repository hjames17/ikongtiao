/*
 * Copyright (C), 2014-2015, xiazhou
 * FileName: UserInfo.java
 * Author: xiazhou
 * Date: 2015年12月15日 下午 00:50:23
 * Description:
 */
package com.wetrack.ikongtiao.domain.customer;

import com.wetrack.ikongtiao.domain.admin.UserType;
import lombok.Data;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Transient;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;

@Data
@Entity(name = "user_info")
public class UserInfo implements Serializable {
    /**
     * id:
     */
    @Id
    private String id;

    @Column(name = "org_id")
    private Long orgId;
    @Column(length = 10)
    private String name;
    /**
     * 关联的企业id
     * 集控系统需要创建用户账号
     * 而该客户又有可能通过维大师的公众号直接为自己创建账号
     * 因此同一个客户可能存在两个账号
     * 两个账号在通过微信绑定操作互相关联之后，在这个字段上互为引用
     */
    @Transient
    private String referenceId;

    /**
     * wechat_open_id:微信openId
     */
    @Column(name = "wechat_open_id", length = 36)
    private String wechatOpenId;

    /**
     * phone:账户手机号
     */
    @Column(length = 16)
    private String phone;

    /**
     * avatar:头像
     */
    @Column(length = 100)
    private String avatar;



    /**
     * account_email:账户邮箱
     */
    @Column(length = 50, name = "account_email")
    private String accountEmail;
    /**
     * 密码可空，对于非集控系统用户来说
     */
    @Column(length = 36)
    private String password;


    /**
     * create_time:
     */
    @Column(name = "create_time")
    private Date createTime;

    /**
     * update_time:
     */
    @Column(name = "update_time")
    private Date updateTime;

    /**
     * province_id:
     */
    @Column(name = "province_id")
    private Integer provinceId;

    /**
     * city_id:
     */
    @Column(name = "city_id")
    private Integer cityId;

    /**
     * district_id:区
     */
    @Column(name = "district_id")
    private Integer districtId;

    /**
     * address:详细地址
     */

    @Column(length = 100)
    private String address;

    /**
     * latitude:纬度
     */
    private BigDecimal latitude;

    /**
     * longitude:经度
     */
    private BigDecimal longitude;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_info
     *
     * @xiazhougenerated Tue Dec 15 12:50:23 CST 2015
     */
    private static final long serialVersionUID = 1L;

    /**
     * type:账号类型,0：普通账号，1：客户管理员
     */
    private Integer type;


    @Deprecated //以下字段



    /**
     * organization:单位名称
     */
    private String organization;

    @Column(name = "contacter_name", length = 10)
    String contacterName;
    @Column(name = "contacter_phone", length = 16)
    String contacterPhone;

    /**
     * 集控系统用户，有维保人员
     */
    @Column(name = "maintainer_id")
    private Integer maintainerId;

    /**
     * auth_state:认证状态,0：待认证，1：认证中，2：认证成功；3:认证失败
     */
    @Column(name = "auth_state")
    private Integer authState;

    /**
     * auth_img:认证图片地址
     */
    @Column(name = "auth_img")
    private String authImg;

    /**
     * license_no:证件号码
     */
    @Column(name = "license_no")
    private String licenseNo;

    public UserType getUserType(){
        if(type == null){
            return UserType.CUSTOMER;
        }
        switch (type){
            case 0:
                return UserType.CUSTOMER;
            case 1:
                return UserType.CUSTOMER_ADMIN;
//            case 1:
//                return UserType.CUSTOMER_FACTORY;
//            case 2:
//                return UserType.CUSTOMER_AGENCY;
            default:
                return null;
        }
    }
    /**
     * This method corresponds to the database table user_info
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", wechatOpenId=").append(wechatOpenId);
        sb.append(", avatar=").append(avatar);
        sb.append(", type=").append(type);
        sb.append(", organization=").append(organization);
        sb.append(", accountEmail=").append(accountEmail);
        sb.append(", phone=").append(phone);
        sb.append(", authState=").append(authState);
        sb.append(", authImg=").append(authImg);
        sb.append(", licenseNo=").append(licenseNo);
        sb.append(", createTime=").append(createTime);
        sb.append(", updateTime=").append(updateTime);
        sb.append(", serialVersionUID=").append(serialVersionUID);
        sb.append("]");
        return sb.toString();
    }
}